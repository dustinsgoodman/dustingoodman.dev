---
import { Image } from 'astro:assets';
import { type CollectionEntry } from 'astro:content';

export interface Props {
	post: CollectionEntry<'blog'>;
	className?: String;
}

const { post, className } = Astro.props as Props;
const isOffsite = !!post.data.originalArticle;

const formatDate = (date: Date) => {
	return date.toLocaleString('default', {
		month: 'short',
		day: 'numeric',
		year: 'numeric',
	});
};

const getReadMoreText = (postSource: string | undefined) => {
	if (postSource === 'Medium') {
		return 'Read more on Medium.com';
	}

	if (postSource === 'ThisDot') {
		return 'Read more on ThisDot.co';
	}

	return 'Read more';
};
---

<a
	href={isOffsite ? post.data.originalArticle : `/blog/${post.slug}`}
	target={isOffsite ? '_blank' : '_self'}
	class:list={[
		'group block rounded-xl bg-white text-gray-900 dark:bg-black dark:text-white border-2 border-blue-100 hover:border-blue-600 dark:border-slate-400 dark:hover:border-blue-300 hover:no-underline overflow-clip hover:shadow-lg shadow-blue-900',
		className,
	]}
	rel="noopener noreferrer"
>
	<article class="flex h-full flex-col">
		<div
			class="mb-4 flex h-44 flex-col justify-center overflow-hidden bg-slate-900"
		>
			<Image
				src={post.data.heroImage}
				alt={post.data.alt}
				class="relative h-44 object-fill"
				loading="lazy"
			/>
		</div>
		<div class="flex grow flex-col px-4">
			<p class="mb-1 text-sm text-gray-500 dark:text-gray-200">
				{formatDate(post.data.publishDate)}
			</p>
			<h2
				class="m-0 text-xl text-blue-600 group-hover:text-blue-800 dark:text-blue-200 dark:group-hover:text-blue-300"
			>
				{post.data.title}
			</h2>

			<div class="py-2 text-sm text-gray-500 dark:text-gray-200">
				{post.data.description}
			</div>
			<div
				class="mt-auto py-2 font-bold text-blue-600 group-hover:text-blue-800 dark:text-blue-200 dark:group-hover:text-blue-300"
			>
				{getReadMoreText(post.data.originalSource)} &rarr;
			</div>
		</div>
	</article>
</a>

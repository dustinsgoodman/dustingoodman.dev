---
import { Markdown } from 'astro/components';
import { BlogPost } from '@/types';

export interface Props {
  post: BlogPost;
}

const { post } = Astro.props;
const isOffsite = !!post.originalArticle;

const getReadMoreText = (postSource: string | undefined) => {
  if (postSource === 'Medium') {
    return 'Read more on Medium.com';
  }

  if (postSource === 'ThisDot') {
    return 'Read more on ThisDot.co';
  }

  return 'Read more';
};
---

<a
  href={isOffsite ? post.originalArticle : post.url}
  target={isOffsite ? '_blank' : '_self'}
  class="group block rounded-xl bg-white dark:bg-gray-600 hover:bg-blue-100 hover:no-underline"
  rel="noopener noreferrer"
>
  <article class="flex flex-col h-full">
    <img
      src={post.heroImage}
      alt={post.alt}
      class="relative w-full max-h-40 sm:max-h-48 mb-4 rounded-t-xl"
    />
    <div class="px-4">
      <p
        class="text-sm text-gray-500 dark:text-gray-200 dark:group-hover:text-gray-500 mb-1"
      >
        {post.publishDate}
      </p>
      <h2
        class="text-2xl text-blue-800 group-hover:text-blue-600 dark:text-sky-300 dark:group-hover:text-sky-600 m-0"
      >
        {post.title}
      </h2>
    </div>
    <div
      class="text-gray-500 dark:text-gray-200 dark:group-hover:text-gray-500 flex-grow p-4"
    >
      <Markdown content={post.description}>

      </Markdown>
    </div>
    <div
      class="text-blue-800 group-hover:text-blue-600 dark:text-sky-300   dark:group-hover:text-sky-600 px-4 pb-4"
    >
      {getReadMoreText(post.originalSource)} &rarr;
    </div>
  </article>
</a>
